{"version":3,"sources":["index.js"],"names":["Button","props","className","onClick","buttonDisplay","LCDDisplay","display","Calculator","operations","a","b","clear","setState","displayNums","cache","result","isAwaitingNextNumber","isFloat","currentOperator","mathOperation","thisOperator","formattedNumber","state","join","newFloat","parseFloat","length","finalResult","toString","toExponential","equals","numpad","number","newNumber","concat","decimal","this","e","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2bf34f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Button(props) {\r\n  return <div className={props.className} onClick={props.onClick}>{props.buttonDisplay}</div>\r\n}\r\n\r\nfunction LCDDisplay(props) {\r\n  return <div className=\"lcdDisplay\">{props.display}</div>  \r\n}\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      displayNums: [0],\r\n      cache: [],\r\n      result: 0,\r\n      isAwaitingNextNumber: false,\r\n      isFloat: false,\r\n      currentOperator: ''\r\n    }\r\n  }\r\n\r\n  operations = {\r\n    '*' : (a, b) => { return a * b },\r\n    '/' : (a, b) => { return a / b },\r\n    '+' : (a, b) => { return a + b },\r\n    '-' : (a, b) => { return a - b }\r\n  }\r\n\r\n  clear = () => {\r\n    this.setState({\r\n      displayNums:[0],\r\n      cache: [],\r\n      result: 0,\r\n      isAwaitingNextNumber: false,\r\n      isFloat: false,\r\n      currentOperator: ''\r\n    })\r\n  }\r\n\r\n  mathOperation = (thisOperator) => {\r\n    const formattedNumber = this.state.cache.join('')\r\n    const newFloat = parseFloat(formattedNumber)\r\n\r\n    // Only update this.state.operator if previous pressed button was an operator\r\n    if(this.state.isAwaitingNextNumber) {\r\n      return this.setState({\r\n        currentOperator: thisOperator\r\n      })\r\n    }\r\n\r\n    // Handle first time pressing operator button\r\n    if(!this.state.isAwaitingNextNumber && this.state.currentOperator.length <= 0){\r\n      return this.setState({\r\n        currentOperator: thisOperator,\r\n        cache: [],\r\n        result: newFloat,\r\n        isAwaitingNextNumber: true\r\n      })\r\n    }\r\n\r\n    // Calculate previous operation and prepare for next incoming number\r\n    if(!this.state.isAwaitingNextNumber) {\r\n      let finalResult = this.operations[this.state.currentOperator](this.state.result,newFloat)\r\n\r\n      if (finalResult.toString().length > 8 ) finalResult = finalResult.toExponential(8)\r\n\r\n      return this.setState({\r\n        displayNums: [finalResult],\r\n        cache: [],\r\n        result: finalResult,\r\n        currentOperator: thisOperator,\r\n        isAwaitingNextNumber: true\r\n      })\r\n    }\r\n  }\r\n\r\n  equals = () => {\r\n    if (!this.state.isAwaitingNextNumber && this.state.currentOperator.length > 0) {\r\n      const formattedNumber = this.state.cache.join('')\r\n      const newFloat = parseFloat(formattedNumber)\r\n      let finalResult = this.operations[this.state.currentOperator](this.state.result,newFloat)\r\n      \r\n      if (finalResult.toString().length > 8 ) finalResult = finalResult.toExponential(8)\r\n\r\n      this.setState({\r\n        displayNums: [finalResult],\r\n        result: finalResult\r\n      })\r\n    }\r\n  }\r\n\r\n  numpad = (number) => {\r\n    let newNumber = this.state.cache\r\n\r\n    if (this.state.displayNums.length <= 8) {\r\n      newNumber = newNumber.concat(number)\r\n    }    \r\n\r\n    this.setState({\r\n      displayNums: newNumber,\r\n      cache: newNumber,\r\n      isAwaitingNextNumber: false\r\n    })   \r\n  }\r\n\r\n  decimal = () => {\r\n    if (this.state.isFloat) return \r\n    \r\n    if(this.state.isAwaitingNextNumber) {\r\n      return this.setState({\r\n        displayNums:['.'],\r\n        cache:['.'],        \r\n        isFloat: true\r\n      })      \r\n    }\r\n\r\n    this.setState({\r\n      displayNums:this.state.displayNums.concat('.'),       \r\n      cache:this.state.displayNums.concat('.'),\r\n      isFloat: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <LCDDisplay display={this.state.displayNums}/>\r\n\r\n        <Button className=\"buttonClear\" buttonDisplay=\"clear\" onClick={this.clear}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"1\" onClick={() => this.numpad(1)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"2\" onClick={() => this.numpad(2)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"3\" onClick={() => this.numpad(3)}/>\r\n        <Button className=\"buttonSecondary\" buttonDisplay=\"รท\" onClick={(e) => this.mathOperation('/', e)}/>\r\n\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"4\" onClick={() => this.numpad(4)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"5\" onClick={() => this.numpad(5)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"6\" onClick={() => this.numpad(6)}/>\r\n        <Button className=\"buttonSecondary\" buttonDisplay=\"x\" onClick={(e) => this.mathOperation('*', e)}/>\r\n\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"7\" onClick={() => this.numpad(7)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"8\" onClick={() => this.numpad(8)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"9\" onClick={() => this.numpad(9)}/>\r\n        <Button className=\"buttonSecondary\" buttonDisplay=\"-\" onClick={(e) => this.mathOperation('-', e)}/>\r\n\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\".\" onClick={this.decimal}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"0\" onClick={() => this.numpad(0)}/>\r\n        <Button className=\"buttonPrimary\" buttonDisplay=\"=\" onClick={this.equals}/>\r\n        <Button className=\"buttonSecondary\" buttonDisplay=\"+\" onClick={(e) => this.mathOperation('+', e)}/>        \r\n      </div>\r\n    )\r\n  }  \r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Calculator />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}